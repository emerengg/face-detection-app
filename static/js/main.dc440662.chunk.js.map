{"version":3,"sources":["reducers/faces.js","reducers/index.js","actions/types.js","store.js","actions/faces.js","components/Menu.js","components/Overlay.js","components/Tooltip.js","components/Canvas.js","components/ImageUploader.js","components/FaceDetectionApp.js","App.js","index.js"],"names":["initState","data","uploadError","combineReducers","faces","state","arguments","length","undefined","action","type","payload","Object","objectSpread","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","apply","resetStore","dispatch","connect","_ref","display","handleDisplay","handleBlur","handleClear","buttonStyle","opacity","cursor","react_default","a","createElement","className","data-testid","onClick","style","htmlFor","id","checked","onChange","Overlay","object","handleUpdateState","cords","isSelected","overlayStyle","top","String","y","left","x","position","width","w","height","h","pointer","border","Tooltip","handleTooltip","tooltip","visibility","Canvas","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","updateCanvas","window","onresize","setState","componentWillUnmount","err","facesCords","_this$refs","refs","canvas","cvs","ctx","getContext","maxWidth","clientWidth","maxHeight","clientHeight","img","Image","onload","end","start","whr","newWidth","newHeight","objects","map","c","Math","round","drawImage","image","canvasPosition","src","_this$refs2","fcanvas","fContext","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","imageData","getImageData","putImageData","strength","globalAlpha","newImageData","return","upadateState","_this$state","isTooltip","_this$props","_this2","_this$state2","wrapperStyle","concat","ref","index","components_Overlay","key","components_Tooltip","components_Menu","Component","ImageUploader","name","status","error","handleSelectedFile","e","imageFile","target","files","fileName","idxDot","lastIndexOf","extFile","substr","toLowerCase","fr","FileReader","result","readAsDataURL","shortenedName","substring","handleSubmit","preventDefault","getFaces","prevPorp","prevState","clearUploadError","submitBtnStyle","Fragment","onSubmit","file","getState","URL","createObjectURL","FormData","append","fetch","method","body","then","res","ok","json","JSON","parse","settings","minNeighbors","min_neighbors","scaleFactor","scale_factor","unique_id","cord","xw","yh","catch","FaceDetectionApp","components_Canvas","components_ImageUploader","href","viewBox","fill","xmlns","d","App","es","components_FaceDetectionApp","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.dc440662.chunk.js","sourcesContent":["import { GET_FACES, UPLOAD_ERROR, RESET_STORE, CLEAR_UPLOAD_ERROR } from '../actions/types'\r\n\r\nconst initState = {\r\n    data: {},\r\n    uploadError: null\r\n}\r\n\r\nexport default function(state = initState, action) {\r\n    switch(action.type) {\r\n        case GET_FACES:\r\n            return {\r\n                data: action.payload\r\n            };\r\n        case RESET_STORE:\r\n            return {\r\n                ...state,\r\n                data: {}\r\n            }\r\n        case UPLOAD_ERROR:\r\n            return {\r\n                ...state,\r\n                uploadError: \"Couldn't upload the image! Try again!\"\r\n            }\r\n        case CLEAR_UPLOAD_ERROR:\r\n            return {\r\n                ...state,\r\n                uploadError: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","// rootReducer\r\nimport { combineReducers } from 'redux';\r\nimport faces from './faces'\r\n\r\nexport default combineReducers({\r\n    faces\r\n});","export const GET_FACES = \"GET_FACES\"\r\nexport const RESET_STORE = \"RESET_STORE\"\r\nexport const UPLOAD_ERROR = \"UPLOAD_ERROR\"\r\nexport const CLEAR_UPLOAD_ERROR = \"CLEAR_UPLOAD_ERROR\"\r\n\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\n\r\nconst initState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initState, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import { GET_FACES, UPLOAD_ERROR, RESET_STORE, CLEAR_UPLOAD_ERROR } from \"./types\";\r\n\r\nexport const resetStore = () => dispatch => {\r\n    dispatch({\r\n        type: RESET_STORE\r\n    })\r\n}\r\n\r\nexport const getFaces = (file) => (dispatch, getState) => {\r\n\r\n    const url = window.URL;\r\n    const src = url.createObjectURL(file.image);\r\n\r\n    const data = new FormData()\r\n    data.append('img', file.image, file.image.name)\r\n\r\n    const endpoint = 'http://127.0.0.1:8000/api/fd/'\r\n\r\n    const lookupOptions = {\r\n              method: \"POST\",\r\n              body: data,\r\n          };\r\n\r\n    fetch(endpoint, lookupOptions)\r\n        .then(res => {\r\n            if(!res.ok){\r\n                throw res;\r\n            } else {\r\n                return res.json();\r\n            }\r\n        })\r\n        .then(res => {\r\n            const objects = JSON.parse(res.cords);\r\n            const settings = {\r\n                minNeighbors: res.min_neighbors,\r\n                scaleFactor: res.scale_factor\r\n            }\r\n            const unique_id = res.unique_id;\r\n            const cords = objects.map(cord => {\r\n                return {\r\n                    x: cord.x,\r\n                    y: cord.y,\r\n                    w: cord.xw,\r\n                    h: cord.yh\r\n                }\r\n            });\r\n\r\n            const data = {\r\n                id: unique_id,\r\n                settings,\r\n                cords,\r\n                image: src\r\n            }\r\n\r\n            dispatch({\r\n                type: GET_FACES,\r\n                payload: data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: UPLOAD_ERROR\r\n            })\r\n        })\r\n}\r\n\r\nexport const clearUploadError = () => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CLEAR_UPLOAD_ERROR\r\n    })\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { resetStore } from '../actions/faces'\r\n\r\n\r\nconst Menu = ({display, faces, handleDisplay, handleBlur, handleClear, resetStore}) => {\r\n\r\n  const displayFaces = () => {\r\n    handleDisplay()\r\n  }\r\n\r\n  const blurImage = () => {\r\n    handleBlur()\r\n  }\r\n\r\n  const clearImage = () => {\r\n    handleClear()\r\n  }\r\n\r\n  const handleRestart = () => {\r\n    resetStore()\r\n  }\r\n\r\n  const buttonStyle = display ? {opacity: 1, cursor: 'pointer'} : {opacity: 0.5, cursor: 'default'};\r\n\r\n  return (\r\n    <div className=\"menu\" data-testid=\"menu\">\r\n      <div>\r\n        <button className=\"btn\" data-testid=\"sa\" onClick={blurImage} style={buttonStyle}>\r\n          <i className=\"material-icons left\">blur_on</i>Blur \r\n        </button>\r\n\r\n        <button className=\"btn\" onClick={clearImage}>\r\n          <i className=\"material-icons left\">undo</i>\r\n          <span>Undo</span>\r\n        </button>\r\n      </div>\r\n\r\n      <div>\r\n        <p className=\"display-faces\">Display {faces === 1 ? <span>face</span> : <span>faces</span>}</p>\r\n        <label htmlFor=\"displayFaces\" className=\"switch\">\r\n          <input type=\"checkbox\" id=\"displayFaces\" data-testid=\"displayFaces\" checked={display} onChange={displayFaces} />\r\n          <span className=\"slider round\"></span>\r\n        </label>\r\n      </div>\r\n\r\n      <div>\r\n        <button className=\"btn\" onClick={handleRestart}>\r\n          <i className=\"material-icons left\">file_upload</i>Upload \r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  display: PropTypes.bool.isRequired,\r\n  faces: PropTypes.number.isRequired,\r\n  handleDisplay: PropTypes.func.isRequired,\r\n  handleBlur: PropTypes.func.isRequired,\r\n  handleClear: PropTypes.func.isRequired,\r\n  resetStore:PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { resetStore })(Menu);","import React from 'react';\r\n\r\n\r\nconst Overlay = ({object, handleUpdateState}) => {\r\n\r\n    const { cords, isSelected} = object;\r\n\r\n    const overlayStyle = {\r\n        top: String(cords.y) + 'px',\r\n        left:  String(cords.x) + 'px',\r\n        position: 'absolute', \r\n        width: String(cords.w) + 'px',\r\n        height: String(cords.h) + 'px',\r\n        pointer: 'cursor',\r\n        border: '',\r\n    };\r\n\r\n    overlayStyle.border = isSelected ? '2px solid blue' : '2px solid red';\r\n\r\n    return (\r\n        <div \r\n            className=\"overlay\" \r\n            style={overlayStyle} \r\n            onClick={() => handleUpdateState(cords)}>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Overlay;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Tooltip = ({display, handleTooltip}) => {\r\n\r\n    let tooltip = {\r\n        position: 'absolute',\r\n        top: 10,\r\n        left: 10,\r\n    }\r\n\r\n    display ? tooltip.visibility = 'visible' : tooltip.visibility = 'hidden'\r\n\r\n    return(\r\n        <div className=\"tooltip\" style={tooltip}>\r\n            <p className=\"tip\">Click on one of the <span>red squares</span> to select it.</p>\r\n            <i className=\"material-icons\" onClick={handleTooltip}>close</i>\r\n        </div>\r\n    )\r\n}\r\n\r\nTooltip.propTypes = {\r\n    display: PropTypes.bool.isRequired,\r\n    handleTooltip: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Tooltip;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { resetStore } from '../actions/faces'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Menu from './Menu';\r\nimport Overlay from './Overlay';\r\nimport Tooltip from './Tooltip';\r\n\r\n\r\nclass Canvas extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    const { cords, image } = this.props\r\n    this.state = {\r\n      facesCords: cords,\r\n      image,\r\n      objects: [],\r\n      display: false,\r\n      canvas: null,\r\n      canvasPosition: { x: null, y: null, w: null, h: null },\r\n      isTooltip: true\r\n    }\r\n  }\r\n\r\n  static propTypes = {\r\n    cords: PropTypes.array.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    resetStore: PropTypes.func.isRequired,\r\n  }\r\n\r\n\r\n  componentDidMount = () => {\r\n    this.updateCanvas()\r\n\r\n    window.onresize = () => {\r\n      const { display } = this.state\r\n      if(display){\r\n        this.setState({\r\n          display: false\r\n        })\r\n      }\r\n      this.updateCanvas()\r\n    }\r\n  }\r\n  \r\n  componentWillUnmount = () => {\r\n      window.onresize = () => {\r\n        try{\r\n          this.updateCanvas()\r\n        }catch(err){}\r\n      }\r\n  }\r\n\r\n  updateCanvas = () => {\r\n    const { facesCords } = this.state\r\n    const { canvas, cvs } = this.refs\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    this.setState({\r\n      canvas\r\n    })\r\n    \r\n    const maxWidth = cvs.clientWidth;\r\n    const maxHeight = cvs.clientHeight;\r\n\r\n    const img = new Image();\r\n    \r\n    img.onload = () => {\r\n      let start = 0;\r\n      let end = 0;\r\n\r\n      \r\n      canvas.width  = maxWidth;\r\n      canvas.height = maxHeight;\r\n\r\n      // var x = canvas.width/2 - img.width/2;\r\n      // var y = canvas.height/2 - img.height/2;\r\n\r\n      // resizing the image to fit the canvas size\r\n      const whr = img.width / img.height;\r\n      let newWidth = canvas.width;\r\n      let newHeight = newWidth / whr;\r\n      if (newHeight > canvas.height) {\r\n          newHeight = canvas.height;\r\n          newWidth = newHeight * whr;\r\n          start = (canvas.width - newWidth) / 2;\r\n      }\r\n      end = (canvas.height - newHeight) / 2;\r\n\r\n      // scaling faces cords to match resized image\r\n      const objects = facesCords.map(c => {\r\n        const x = Math.round(((c.x / img.width) * newWidth) + start);\r\n        const y = Math.round(((c.y / img.height) * newHeight) + end);\r\n        const w = Math.round((((c.w / img.width) * newWidth) - x) + start);\r\n        const h = Math.round((((c.h / img.height) * newHeight) - y) + end);\r\n        return { cords:{x: x, y: y, w: w, h: h}, isSelected: false }\r\n      })\r\n      \r\n      ctx.drawImage(img, start, end, newWidth, newHeight);\r\n\r\n      this.setState({\r\n        objects,\r\n        image: img,\r\n        canvasPosition: { x: start, y: end, w: newWidth, h: newHeight }\r\n      })\r\n    };\r\n    img.src = this.props.image;\r\n  } \r\n\r\n  handleBlur = () => {\r\n    const { canvas, fcanvas } = this.refs\r\n    const ctx = canvas.getContext('2d');\r\n    const fContext = fcanvas.getContext('2d');\r\n\r\n    for(let object of this.state.objects){\r\n      if(object.isSelected){\r\n\r\n        // copy image \r\n        const imageData = ctx.getImageData(object.cords.x, object.cords.y, object.cords.w, object.cords.h)\r\n        fcanvas.width  = imageData.width;\r\n        fcanvas.height = imageData.height;\r\n\r\n        // past image to fcanvas\r\n        fContext.putImageData(imageData, 0, 0);\r\n\r\n        let strength;\r\n\r\n        if(imageData.height >= 300){\r\n          strength = 5;\r\n        }else if(imageData.height >= 240){\r\n          strength = 5;\r\n        }else if(imageData.height >= 180){\r\n          strength = 4;\r\n        }else if(imageData.height >= 120){\r\n          strength = 3;\r\n        }else{\r\n          strength = 2;\r\n        }\r\n\r\n        // blur pasted image\r\n        fContext.globalAlpha = 0.5;\r\n\r\n        for (let y = -strength; y <= strength; y += 2) {\r\n          for (let x = -strength; x <= strength; x += 2) {\r\n            fContext.drawImage(fcanvas, -x, -y);\r\n          }\r\n        }\r\n\r\n        fContext.globalAlpha = 1.0;\r\n\r\n        //copy blured image and past back to the canvas\r\n        const newImageData = fContext.getImageData(0, 0, imageData.width, imageData.height)\r\n        ctx.putImageData(newImageData, object.cords.x, object.cords.y);\r\n      }\r\n    }\r\n  }\r\n\r\n  upadateState = (cords) => {\r\n    const objects = this.state.objects.map(object => object.cords.x === cords.x ? {...object, isSelected: !object.isSelected} : object)\r\n    this.setState({\r\n      objects\r\n    })\r\n  }\r\n\r\n  handleClear = () => {\r\n    const { image, canvasPosition } = this.state\r\n\r\n    const canvas = this.refs.canvas\r\n    const ctx = canvas.getContext('2d');\r\n    \r\n    ctx.drawImage(image, canvasPosition.x, canvasPosition.y, canvasPosition.w, canvasPosition.h);\r\n  }\r\n\r\n  handleDisplay = () => {\r\n    this.setState({\r\n      display: !this.state.display\r\n    })\r\n  }\r\n\r\n  handleTooltip = () => {\r\n    this.setState({\r\n      isTooltip: !this.state.isTooltip\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { resetStore } = this.props\r\n    const { canvas, display, facesCords, objects, isTooltip } = this.state\r\n\r\n    const wrapperStyle = canvas ? {height: `${canvas.height}px`} : null;\r\n\r\n    const fcvs = {\r\n      width:'40px',\r\n      height:'40px',\r\n      display: 'none'\r\n    }\r\n\r\n    return (\r\n        <div className=\"canvas-menu\">\r\n          <div className=\"canvas-wrapper\" ref=\"cvs\" style={wrapperStyle}>\r\n              <canvas ref=\"canvas\"></canvas>\r\n              {facesCords.length > 0 && display ? objects.map((object, index) => \r\n                <Overlay key={index} object={object} handleUpdateState={this.upadateState} />)\r\n              : null}\r\n              {isTooltip && <Tooltip display={display} handleTooltip={this.handleTooltip}/>}\r\n          </div>\r\n          <canvas ref=\"fcanvas\" style={fcvs}></canvas>\r\n          {facesCords.length > 0 ?\r\n            <Menu display={display} handleDisplay={this.handleDisplay} handleClear={this.handleClear} handleBlur={this.handleBlur} faces={facesCords.length}/>\r\n            :\r\n            <div className=\"not-found\">\r\n              <p>No faces found!</p>\r\n              <button onClick={() => resetStore()}>Upload new image</button>\r\n            </div>\r\n          }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  cords: state.faces.data.cords,\r\n  image: state.faces.data.image,\r\n})\r\n\r\nexport default connect(mapStateToProps, { resetStore })(Canvas);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types';\r\nimport { getFaces, clearUploadError } from '../actions/faces'\r\n\r\n\r\nclass ImageUploader extends Component {\r\n    \r\n    state = {\r\n        image: null,\r\n        name: null,\r\n        status: false,\r\n        error: null\r\n    }\r\n\r\n    static propTypes = {\r\n        getFaces: PropTypes.func.isRequired\r\n    }\r\n\r\n    componentDidUpdate(prevPorp, prevState){\r\n        const { uploadError } = this.props\r\n        if((uploadError !== prevPorp.uploadError) && uploadError){\r\n            this.setState({\r\n                image: null,\r\n                name: null,\r\n                status: false,\r\n                error: uploadError\r\n            }, () => {\r\n                const { uploadError } = this.props\r\n                uploadError !== null && this.props.clearUploadError() \r\n            })\r\n        }\r\n    }\r\n\r\n    handleSelectedFile = (e) => {\r\n        try{\r\n            const imageFile = e.target.files[0]\r\n            const fileName = e.target.files[0].name\r\n\r\n            const idxDot = fileName.lastIndexOf(\".\") + 1;\r\n            const extFile = fileName.substr(idxDot, fileName.length).toLowerCase();\r\n\r\n            if (extFile === \"jpg\" || extFile === \"jpeg\" || extFile === \"png\"){ \r\n                const fr = new FileReader();\r\n\r\n                fr.onload = () => {\r\n                    const img = new Image();\r\n        \r\n                    img.onload = () => {\r\n                    };\r\n        \r\n                    img.src = fr.result;\r\n                };\r\n        \r\n                fr.readAsDataURL(imageFile);\r\n\r\n                const shortenedName = fileName.length <= 10 ? fileName : `${fileName.substring(0, 9)}...`;\r\n                \r\n                this.setState({\r\n                    image: imageFile,\r\n                    name: shortenedName,\r\n                    error: null\r\n                })\r\n            }else{\r\n                this.setState({   \r\n                    image: null,\r\n                    name: null,\r\n                    status: false,\r\n                    error: \"Only jpg/jpeg and png files are allowed!\"\r\n                })\r\n            }\r\n        }catch(error) {\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const { image } = this.state\r\n        const img = { image }\r\n        this.props.getFaces(img);\r\n        this.setState({\r\n            status: !this.state.status\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { name, error } = this.state\r\n\r\n        const submitBtnStyle = name || error ? { visibility: \"visible\" } : { visibility: \"hidden\" };\r\n\r\n        return (\r\n            <>\r\n                {!this.state.status ?\r\n                        <div className=\"upload-form\">\r\n                            <form onSubmit={this.handleSubmit} data-testid=\"image-upload-form\">\r\n                                <input type=\"file\" className=\"inputfile\" id=\"imageUpload\" onChange={this.handleSelectedFile} data-testid=\"imageUpload\"/>\r\n                                <label className=\"upload\" htmlFor=\"imageUpload\">\r\n                                    <i className=\"ico fas fa-file-upload fa-10x\"></i>\r\n                                    {name ? <span data-testid=\"imageName\">{name}</span> : <span>Choose a file...</span>}\r\n                                </label>\r\n                                {error ? \r\n                                    <div className=\"upload-error\" style={submitBtnStyle}>{error}</div>\r\n                                    :\r\n                                    <button type=\"submit\" className=\"btn\" style={submitBtnStyle} id=\"upload-btn\"  name=\"action\">Upload</button>\r\n                                }\r\n                            </form>\r\n                        </div>\r\n                    :   \r\n                        <div className=\"loading\" data-testid=\"loading\">\r\n                            <div className=\"loader\"></div>\r\n                        </div>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    uploadError: state.faces.uploadError\r\n})\r\n\r\nexport default connect(mapStateToProps, { getFaces, clearUploadError })(ImageUploader);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Canvas from './Canvas';\r\nimport ImageUploader from './ImageUploader';\r\n\r\nimport './app.css';\r\n\r\n\r\nclass FaceDetectionApp extends Component {\r\n\r\n  render() {\r\n    const { image } = this.props\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"main\">\r\n          {image ?\r\n            <Canvas/>\r\n          :\r\n            <div className=\"start-screen\">\r\n              <div className=\"title\"><h1>Face Detection App</h1></div>\r\n\r\n              <ImageUploader />\r\n\r\n              <div className=\"reference\">\r\n                <div className=\"ref-item\">\r\n                  <a href=\"https://github.com/emerengg/face-detection-app\"><i className=\"icons fab fa-github fa-lg\"></i></a>\r\n                  <small>GitHub</small>\r\n                </div>\r\n              </div>\r\n              <div className=\"wave\">\r\n                <svg width=\"1920\" height=\"477\" viewBox=\"0 0 1920 477\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path d=\"M1621 82.0001C1749.02 0.539482 1920 0.65332 1920 0.65332V477H0V74.5C0 74.5 256.5 160.092 415 160.092C573.5 160.092 611 77.6485 802 118C993 158.351 1131 199 1293 188.633C1455 178.266 1505 155.813 1621 82.0001Z\" fill=\"black\"/>\r\n                </svg>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  image: state.faces.data.image\r\n})\r\n\r\nexport default connect(mapStateToProps)(FaceDetectionApp);\r\n","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n\r\nimport FaceDetectionApp from './components/FaceDetectionApp'\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <FaceDetectionApp />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}